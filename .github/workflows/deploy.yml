name: Build and Deploy Docker Images

on:
  push:
    branches:
      - qa

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and push hello-service
        run: |
          docker build ./ -f ./Dockerfile -t ${{ secrets.DOCKER_HUB_USERNAME }}/hello-service:latest
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/hello-service:latest

  deploy:
    name: Deploy to AWS EC2
    runs-on: ubuntu-latest
    needs: build-and-push
    if: ${{ needs.build-and-push.result == 'success' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup SSH Key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > private.pem
          chmod 600 private.pem

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            # Instalar Docker si no está presente
            if ! [ -x "$(command -v docker)" ]; then
              sudo apt-get update
              sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
              curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
              sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
              sudo apt-get update
              sudo apt-get install -y docker-ce
              sudo usermod -aG docker $USER
            fi

            # Detener y eliminar contenedores existentes (si los hay)
            sudo docker stop $(sudo docker ps -q) || true
            sudo docker rm $(sudo docker ps -aq) || true

            # Descargar la última imagen y ejecutar el contenedor
            sudo docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/hello-service:latest
            sudo docker run -d --name hello-service -p 8081:5000 ${{ secrets.DOCKER_HUB_USERNAME }}/hello-service:latest

            # Limpiar imágenes no utilizadas
            sudo docker image prune -af
